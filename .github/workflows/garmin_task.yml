name: Garmin Connect to Todoist Task

on:
  schedule:
    - cron: "0 6-21 * * *" # Run workflow once an hour from 06:00 to 21:00 every day
  workflow_dispatch: # Allow manual trigger

jobs:
  garmin-connect-task:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo # Ensure the workflow has access to the code
        uses: actions/checkout@v4

      - name: Set up Python # Make sure Python is available in GitHub runner environment
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install project dependencies # Install required packages for script to run
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Restore the task tracker cache # Restore database file from cache if available, track tasks already created
        uses: actions/cache@v4
        with:
          path: sync_tracker.db
          key: garmin-tasks-db-${{ github.run_id }} # Use unique cache key per run to force saving updated database
          restore-keys:
            | # Restore most recent database between runs to prevent duplicate task creation
            garmin-tasks-db-

      - name: Run the Garmin Connect script # Execute main script
        env:
          GARMIN_USER: ${{ secrets.GARMIN_USER }}
          GARMIN_PASS: ${{ secrets.GARMIN_PASS }}
          TODOIST_SECTION_ID: ${{ secrets.TODOIST_SECTION_ID }}
          TODOIST_PROJECT_ID: ${{ secrets.TODOIST_PROJECT_ID }}
          TODOIST_API_TOKEN: ${{ secrets.TODOIST_API_TOKEN }}
        run: |
          python garmin_connect.py
      - name: Upload the database as artefact
        uses: actions/upload-artifact@v3
        with:
          name: sync-tracker-db
          path: sync_tracker.db
